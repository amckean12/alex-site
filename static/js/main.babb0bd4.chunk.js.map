{"version":3,"sources":["containers/splash-container.js","components/portfolio-project.js","containers/portfolio-container.js","App.js","serviceWorker.js","reducers/route-reducer.js","reducers/root-reducer.js","index.js"],"names":["SplashContainer","react_default","a","createElement","className","href","index_es","icon","faGithub","faLinkedin","Component","ProjectComponent","props","title","techUsed","about","keyfeatures","map","feature","onClick","handleClick","id","concat","link","PortfolioContainer","event","currentTarget","includes","window","open","alert","portfolio_project","this","linkStyles","textDecoration","font-family","color","App","modules","to","spy","smooth","offset","duration","style","containers_splash_container","portfolio_container","connect","route","currentRoute","routeReducer","dispatch","addHomeRoute","type","addBlogRoute","addPortRoute","Boolean","location","hostname","match","initialState","rootReducer","combineReducers","state","arguments","length","undefined","Object","objectSpread","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4UAqBeA,gMAbV,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,+BAA+BD,UAAU,2BAA0BH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMC,OAClGP,EAAAC,EAAAC,cAAA,KAAGE,KAAK,2CAA2CD,UAAU,6BAA4BH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAME,gBAR5FC,cCsBfC,SAvBU,SAACC,GAAD,OACvBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,gBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAKS,EAAMC,QAEbZ,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,YAAOS,EAAME,WAC1Bb,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,YAAOS,EAAMG,QACvBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UACIS,EAAMI,YAAYC,IAAI,SAACC,GAAD,OACtBjB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBc,OAGpCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,UAAQgB,QAASP,EAAMQ,YAAaC,GAAE,aAAAC,OAAeV,EAAMC,QAA3D,aACAZ,EAAAC,EAAAC,cAAA,KAAGE,KAAMO,EAAMW,MAAMtB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAMC,YCoBrCgB,6MAlCbJ,YAAc,SAACK,GACTA,EAAMC,cAAcL,GAAGM,SAAS,eACH,qBAA3BF,EAAMC,cAAcL,GACtBO,OAAOC,KAAK,wCACwB,gCAA3BJ,EAAMC,cAAcL,IAC7BS,MAAM,qGAMT,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACdH,EAAAC,EAAAC,cAAC4B,EAAD,CACElB,MAAM,SACNE,MAAM,+FACND,SAAS,6FACTE,YAAa,CAAC,oCAAqC,4CAA6C,sCAAuC,8CACvIO,KAAO,4CACPH,YAAeY,KAAKZ,cAEtBnB,EAAAC,EAAAC,cAAC4B,EAAD,CACElB,MAAM,oBACNE,MAAM,2FACND,SAAS,+DACTE,YAAa,CAAC,iBAAkB,mCAAoC,+BACpEO,KAAO,mDACPH,YAAeY,KAAKZ,sBA5BGV,6BCO3BuB,SAAa,CACjBC,eAAgB,OAChBC,cAAe,kBACfC,MAAO,UAGHC,mLAGF,OACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACmC,EAAA,KAAD,CAAMC,GAAG,sBAAsBC,KAAK,EAAMC,QAAQ,EAAMC,QAAS,GAAIC,SAAU,IAAKC,MAAOX,GAA3F,cAEFhC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,4BAAR,SAEFJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACmC,EAAA,KAAD,CAAMC,GAAG,mBAAmBC,KAAK,EAAMC,QAAQ,EAAME,SAAU,IAAKC,MAAOX,GAA3E,YAKNhC,EAAAC,EAAAC,cAAC0C,EAAD,MACA5C,EAAAC,EAAAC,cAAC2C,EAAD,cArBQpC,aAuCHqC,cAZS,SAAAC,GACvB,MAAO,CACLC,aAAcD,EAAME,aAAaF,QAIT,SAAAG,GAAQ,MAAK,CACtCC,aAAc,SAAAJ,GAAK,OAAIG,EAAS,CAACE,KAAM,iBAAkBL,WACzDM,aAAc,SAAAN,GAAK,OAAIG,EAAS,CAACE,KAAM,iBAAkBL,WACzDO,aAAc,SAAAP,GAAK,OAAIG,EAAS,CAACE,KAAM,iBAAkBL,aAG5CD,CAA6CV,GC/CxCmB,QACW,cAA7B5B,OAAO6B,SAASC,UAEe,UAA7B9B,OAAO6B,SAASC,UAEhB9B,OAAO6B,SAASC,SAASC,MACvB,8EClBAC,EAAc,CAClBZ,MAAO,KCET,IAIea,EAJKC,YAAgB,CAClCZ,aDDc,WAA8C,IAA7Ba,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBJ,EACtC,QAD2DI,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC7Cb,MACZ,IAAK,iBACJ,OAAAc,OAAAC,EAAA,EAAAD,CAAA,GAAUJ,EAAV,CAAiBf,MAAO,MACzB,IAAK,iBACJ,OAAAmB,OAAAC,EAAA,EAAAD,CAAA,GAAUJ,EAAV,CAAiBf,MAAO,UACzB,IAAK,iBACJ,OAAAmB,OAAAC,EAAA,EAAAD,CAAA,GAAUJ,EAAV,CAAiBf,MAAO,eACzB,QACC,OAAOe,MEHPM,EAAQC,YAAYT,EAAajC,OAAO2C,8BAAgC3C,OAAO2C,gCAErFC,IAASC,OACPxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAUL,MAAOA,GACfpE,EAAAC,EAAAC,cAACwE,EAAD,OAEFC,SAASC,eAAe,SHkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.babb0bd4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport '../splash.css'\nimport '../splash-container.css'\n\nclass SplashContainer extends Component {\n   render(){\n     return(\n       <div className=\"splash-container\">\n         <h1>Hello, I'm Alex!</h1>\n         <h2>Full Stack Developer | Blogger | Always Learning</h2>\n         <div className=\"social-icon-container\">\n          <a href=\"https://github.com/amckean12\" className=\"social-icon-link-github\"><FontAwesomeIcon icon={faGithub}/></a>\n          <a href=\"https://www.linkedin.com/in/alex-mckean/\" className=\"social-icon-link-linkedin\"><FontAwesomeIcon icon={faLinkedin}/></a>\n        </div>\n      </div>\n     )\n   }\n}\n\nexport default SplashContainer\n","import React from 'react'\nimport '../portfolio.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nconst ProjectComponent = (props) => (\n  <div className=\"project-component\">\n    <div className={`project-info`}>\n      <div className=\"project-title\">\n        <h2>{props.title}</h2>\n      </div>\n      <p>Tech Used:<span>{props.techUsed}</span></p>\n      <p>About: <span>{props.about}</span></p>\n      <div className=\"key-features\">\n        <p>Key Dev. Features</p>\n        <ul>\n          { props.keyfeatures.map((feature) =>\n            <li className=\"feature-item\">{feature}</li>) }\n        </ul>\n      </div>\n      <div className=\"project-link-container\">\n        <button onClick={props.handleClick} id={`live demo ${props.title}`}>Live Demo</button>\n        <a href={props.link}><FontAwesomeIcon icon={faGithub}/></a>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ProjectComponent\n","import React, { Component } from 'react'\n//Components\nimport ProjectComponent from '../components/portfolio-project'\n\n//Styling\nimport '../portfolio.css'\n\nclass PortfolioContainer extends Component {\n  handleClick = (event) => {\n    if (event.currentTarget.id.includes(\"live demo\")){\n      if (event.currentTarget.id === \"live demo Piatto\"){\n        window.open(\"https://piatto-client.herokuapp.com/\")\n      } else if (event.currentTarget.id === \"live demo My Portfolio Site\"){\n        alert(\"Hi, welcome to my site!\")\n      }\n    }\n  }\n\n   render(){\n     return(\n       <div className=\"Portfolio-Container\">\n        <ProjectComponent\n          title=\"Piatto\"\n          about=\"A dynamic cookbook that allows users to build menus, based on searching for recipes by tags.\"\n          techUsed=\"Javascript | Ruby | React | Redux | Rails | Knock | HTML | CSS | PostgreSQL | Heroku | Git\"\n          keyfeatures={[\"JWT authentication for API access\", \"Nested Form Submission using ActiveRecord\", \"User Persistance with Redux-Persist\", \"Asynchronous web requests with Redux-Thunk\"]}\n          link = \"https://github.com/amckean12/piatto-react\"\n          handleClick = {this.handleClick}\n          />\n        <ProjectComponent\n          title=\"My Portfolio Site\"\n          about=\"This current site. I use this for my blog as well as displaying projects I've worked on.\"\n          techUsed=\"Javascript | React | Redux | HTML | CSS | Github Pages | Git\"\n          keyfeatures={[\"Minimal Design\", \"React-Scroll used for Navigation\", \"Responsive navigation links\"]}\n          link = \"https://github.com/amckean12/alex-site.github.io\"\n          handleClick = {this.handleClick}\n          />\n       </div>\n     )\n   }\n}\n\nexport default PortfolioContainer\n","import React, { Component } from 'react';\n//Components\nimport SplashContainer from './containers/splash-container'\nimport PortfolioContainer from './containers/portfolio-container'\n\n//React Scroll\nimport { Link } from 'react-scroll'\n\n//Redux Imports\n\nimport { connect } from 'react-redux'\n\n//Styling Inputs\nimport './App.css'\nconst linkStyles = {\n  textDecoration: 'none',\n  'font-family': 'Source Sans Pro',\n  color: 'white'\n}\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Navigation-Wrapper\">\n          <nav>\n            <ul>\n              <li>\n                <Link to='Portfolio-Container' spy={true} smooth={true} offset={-80} duration={550} style={linkStyles}>Portfolio</Link>\n              </li>\n              <li>\n                <a href=\"https://dev.to/amckean12\">Blog</a>\n              </li>\n              <li>\n                <Link to='splash-container' spy={true} smooth={true} duration={550} style={linkStyles}>Home</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n          <SplashContainer />\n          <PortfolioContainer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = route => {\n return({\n   currentRoute: route.routeReducer.route\n })\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addHomeRoute: route => dispatch({type: \"ADD_HOME_ROUTE\", route}),\n  addBlogRoute: route => dispatch({type: \"ADD_BLOG_ROUTE\", route}),\n  addPortRoute: route => dispatch({type: \"ADD_PORT_ROUTE\", route})\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState= {\n  route: \"/\"\n}\n export default function reducer(state = initialState, action){\n   switch(action.type){\n     case 'ADD_HOME_ROUTE':\n      return{...state, route: '/'}\n     case 'ADD_BLOG_ROUTE':\n      return{...state, route: '/blog'}\n     case 'ADD_PORT_ROUTE':\n      return{...state, route: '/portfolio'}\n     default:\n      return state;\n   }\n }\n","import { combineReducers } from 'redux'\nimport routeReducer from './route-reducer'\n\nconst rootReducer = combineReducers({\n  routeReducer,\n})\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/root-reducer.js'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}